Игра сдача экзамена
В начале все юниты стоят на квадратном клетчатом поле, есть студенты, за которых играет игрок и экзаменаторы, которыми управляет компьютер. Цель игры - сдать экзамен. Экзаменаторы делятся на 2 типа - лектор и семинаристы. Семинаристы как-то ходят по полю, а лектор стоит и за всеми наблюдает. В начале игры каждому студенту задается вопрос по определенной теме и он должен начать собирать ответ по частям. Для этого он может потихоньку перемещаться по полю и общаться с другими студентами, чтобы увеличивать их готовность к ответу или свою. Но это можно делать только когда экзаменаторы не видят.
При сдаче качество ответа зависит от качества подготовки студента, отношения экзаменатора к нему, знаний преподавателя, отношения к алкоголю. В зависимости от этого он решает дать дополнительный вопрос. Основной и дополнительный вопрос могут быть по разным предметам. 


Создание экзаменатора

Создаем фабрику examenator_factory с функцией factory и делаем ее либо lecturers_factory - функция возвращающая персонаж класса lecturer, либо seminarists_factory, которая возвращает персонаж класса seminarist. Используется паттерн фабрика потому что у семинариста и лектора одни и те же характеристики, но у лектора они более сильные. Lecturer и seminarist наследники абстрактного класса examenator. Создание экзаменатора заключается в заполнении его атрибутов числами из определенного диапазона случайным образом(чтобы игра была веселее), выбора его имени и профильного предмета, который он знает лучше других предметов. Эти параметры(имя, предмет) берутся из специального массива.


Создание студента

Есть два типа студентов - player и bot ( оба наследники класса unit ). Мы выдаем наружу функцию giveStudentFacroty, которая нам создает playerFactory или botFactory, в зависимости от переданного в функцию параметра, также в giveStudentFacroty мы передаем сложность (от нее зависят характеристики студентов) и факультет. Ботов мы оздаем с рандомнвми характеристиками.
При вызове playerFactory, вызывается графическое мею, в котором можно будет выбрать первичные характеристики. При выборе каждой первичной характеристикиб, игрок в реальном времени видит, как меняются вторичные (например высокий уровень алкоголя в крови сильно повышает удачю, но ухудшает энергию и ораторские способности), для чего вызывается Builder, который первичные меняет характеристики игроку и выводит вторичные. Т.к. графичиский интерфейс пока не реализован, вместо меню у нас есть заплатка - консольное меню с очень простой формулой переч=счета характеристик.
